[tool.poetry]
name = "stock_tool"
version = "0.0.1"
description = "endpoints to retrieve porfolio information + predictions"
authors = ["David Carballo <dmcarba@gmail.com>"]
repository = "https://github.com/dmcarba/stock_tool"
documentation = "https://dmcarba.github.io/stock_tool/"
readme = "README.md"
packages = [
  {include = "stock_tool"}
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
fastapi = "*"
uvicorn = "*"
pandas = "*"
yfinance = "*"
mcp = "*"
fastmcp = "*"
lxml = "*"


[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
deptry = "*"
mypy = "*"
pre-commit = "*"
docker = "*"
requests = "*"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["portfolio_tool"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["portfolio_tool"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
